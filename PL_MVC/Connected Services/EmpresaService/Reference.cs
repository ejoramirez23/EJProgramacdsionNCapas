//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PL_MVC.EmpresaService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmpresaService.IEmpresa")]
    public interface IEmpresa {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/Add", ReplyAction="http://tempuri.org/IEmpresa/AddResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.ResultadosQuerys))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Empresa))]
        ML.ResultadosQuerys Add(ML.Empresa empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/Add", ReplyAction="http://tempuri.org/IEmpresa/AddResponse")]
        System.Threading.Tasks.Task<ML.ResultadosQuerys> AddAsync(ML.Empresa empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/Update", ReplyAction="http://tempuri.org/IEmpresa/UpdateResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.ResultadosQuerys))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Empresa))]
        ML.ResultadosQuerys Update(ML.Empresa empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/Update", ReplyAction="http://tempuri.org/IEmpresa/UpdateResponse")]
        System.Threading.Tasks.Task<ML.ResultadosQuerys> UpdateAsync(ML.Empresa empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/Delete", ReplyAction="http://tempuri.org/IEmpresa/DeleteResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.ResultadosQuerys))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Empresa))]
        ML.ResultadosQuerys Delete(ML.Empresa empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/Delete", ReplyAction="http://tempuri.org/IEmpresa/DeleteResponse")]
        System.Threading.Tasks.Task<ML.ResultadosQuerys> DeleteAsync(ML.Empresa empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/GetAll", ReplyAction="http://tempuri.org/IEmpresa/GetAllResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Empresa))]
        ML.ResultadosQuerys GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/GetAll", ReplyAction="http://tempuri.org/IEmpresa/GetAllResponse")]
        System.Threading.Tasks.Task<ML.ResultadosQuerys> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/GetById", ReplyAction="http://tempuri.org/IEmpresa/GetByIdResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.ResultadosQuerys))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Empresa))]
        ML.ResultadosQuerys GetById(ML.Empresa empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/GetById", ReplyAction="http://tempuri.org/IEmpresa/GetByIdResponse")]
        System.Threading.Tasks.Task<ML.ResultadosQuerys> GetByIdAsync(ML.Empresa empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/DoWork", ReplyAction="http://tempuri.org/IEmpresa/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/DoWork", ReplyAction="http://tempuri.org/IEmpresa/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmpresaChannel : PL_MVC.EmpresaService.IEmpresa, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmpresaClient : System.ServiceModel.ClientBase<PL_MVC.EmpresaService.IEmpresa>, PL_MVC.EmpresaService.IEmpresa {
        
        public EmpresaClient() {
        }
        
        public EmpresaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmpresaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpresaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpresaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ML.ResultadosQuerys Add(ML.Empresa empresa) {
            return base.Channel.Add(empresa);
        }
        
        public System.Threading.Tasks.Task<ML.ResultadosQuerys> AddAsync(ML.Empresa empresa) {
            return base.Channel.AddAsync(empresa);
        }
        
        public ML.ResultadosQuerys Update(ML.Empresa empresa) {
            return base.Channel.Update(empresa);
        }
        
        public System.Threading.Tasks.Task<ML.ResultadosQuerys> UpdateAsync(ML.Empresa empresa) {
            return base.Channel.UpdateAsync(empresa);
        }
        
        public ML.ResultadosQuerys Delete(ML.Empresa empresa) {
            return base.Channel.Delete(empresa);
        }
        
        public System.Threading.Tasks.Task<ML.ResultadosQuerys> DeleteAsync(ML.Empresa empresa) {
            return base.Channel.DeleteAsync(empresa);
        }
        
        public ML.ResultadosQuerys GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<ML.ResultadosQuerys> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public ML.ResultadosQuerys GetById(ML.Empresa empresa) {
            return base.Channel.GetById(empresa);
        }
        
        public System.Threading.Tasks.Task<ML.ResultadosQuerys> GetByIdAsync(ML.Empresa empresa) {
            return base.Channel.GetByIdAsync(empresa);
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
    }
}
